kubectl get nodes
kubectl get nodes -o wide
kubectl get nodes -o json
kubectl get nodes -o yaml

kubectl describe nodes
kubectl describe nodes master
kubectl describe nodes worker1

#Kubernetes Objects list (Search google)

kubectl api-resources

kubectl get namespaces
kubectl get ns
kubectl create ns production
kubectl describe namespaces production
kubectl delete namespaces production


kubectl get pods
kubectl get pods -o wide
kubectl get pods -A
kubectl get pods -n kube-system
kubectl get pods -n kube-flannel

#Live watch pods
watch kubectl get pods
watch kubectl get pods <container name>
kubectl get pods -w



kubectl run -h
kubectl run pod1 --image nginx
curl 10.244.1.14
curl http://10.244.1.14
kubectl describe pods pod1
kubectl logs pod/pod1


kubectl delete pods pod1                  # Delete spacefic pod
kubectl delete pods --all                 # All pods delete
kubectl delete pods --all --force         # Force All pods delete

kubectl create namespace ns1
kubectl run pod1 --image nginx --namespace ns1
kubectl get pods -n ns1
kubectl delete pods -n ns1 pod1
kubectl delete pods -n ns1 --all


kubectl get pods -n kube-system | wc -l


kubectl explain namespace
kubectl explain pod
kubectl explain replicaset


#Create a pod using yaml
kubectl apply -f single.yaml --dry-run
kubectl apply -f single.yaml

kubectl get pods
kubectl run pod2 --image nginx --dry-run=client -o yaml
# Output
----------------------------
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: pod2
  name: pod2
spec:
  containers:
  - image: nginx
    name: pod2
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
------------------------------

kubectl exec -it multicontainer /bin/bash   #login container
kubectl exec -it multicontainer /bin/sh     #login container


    

